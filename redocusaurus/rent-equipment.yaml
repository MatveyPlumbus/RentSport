info:
  description: API для системы RentSport.
  title: Inventory and Booking API
  version: 1.0.0
openapi: 3.0.2
security:
  - BearerAuth: []
servers:
  - url: https://RentSport.com
paths:
  /api/booking/search:
    get:
      tags:
        - Search
      description: Выполняет поиск инвентаря с возможностью фильтрации.
      parameters:
        - description: Поиск по названию или описанию
          in: query
          name: search
          required: false
          schema:
            type: string
        - description: Категория инвентаря
          in: query
          name: category
          required: false
          schema:
            type: string
        - description: Дата начала доступности
          in: query
          name: startDate
          required: false
          schema:
            format: date
            type: string
        - description: Дата окончания доступности
          in: query
          name: endDate
          required: false
          schema:
            format: date
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/InventoryItem'
                type: array
          description: Результаты поиска
        '400': &ref_0
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorStructure'
          description: Неправильный запрос
        '403': &ref_1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorStructure'
          description: Доступ запрещён
        '404': &ref_2
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorStructure'
          description: Ресурс не найден
        '500': &ref_3
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorStructure'
          description: Внутренняя ошибка сервера
      summary: Поиск инвентаря
  /registration:
    post:
      summary: Регистрация нового пользователя
      description: Позволяет зарегистрировать нового пользователя, предоставив его данные.
      tags:
        - RegistrationUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registrationRequest'
      responses:
        '201':
          description: Пользователь успешно зарегистрирован.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: >-
                      Регистрация успешна. Подтвердите вашу электронную почту
                      для активации аккаунта.
        '400': *ref_0
  /api/auth/login:
    post:
      summary: Авторизация пользователя
      description: Позволяет пользователю войти в систему, предоставив учетные данные.
      tags:
        - Authorization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Успешная авторизация.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401': *ref_0
  /api/auth/forgot-password:
    post:
      summary: Запрос на восстановление пароля
      description: Позволяет пользователю запросить восстановление пароля.
      tags:
        - Authorization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordRequest'
      responses:
        '200':
          description: Запрос на восстановление пароля отправлен успешно.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: >-
                      Инструкция по восстановлению пароля отправлена на вашу
                      электронную почту.
        '404': *ref_0
  /api/auth/reset-password:
    post:
      summary: Сброс пароля
      description: Позволяет пользователю установить новый пароль.
      tags:
        - Authorization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
      responses:
        '200':
          description: Пароль успешно сброшен.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Пароль успешно обновлён.
        '400': *ref_0
  /api/profile:
    get:
      summary: Получение данных профиля
      description: Возвращает информацию о профиле текущего пользователя.
      tags:
        - Profile
      responses:
        '200':
          description: Данные профиля успешно получены.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '401': *ref_0
  /api/profile/notifications:
    get:
      summary: Получение уведомлений пользователя
      description: Возвращает список уведомлений для текущего пользователя.
      tags:
        - Profile
      responses:
        '200':
          description: Уведомления успешно получены.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserNotification'
        '401': *ref_0
  /api/booking/{id}:
    post:
      tags:
        - Bookings
      description: Подтверждает указанное бронирование.
      parameters:
        - description: ID бронирования
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Бронирование успешно подтверждено
        '400': *ref_0
        '403': *ref_1
        '404': *ref_2
        '500': *ref_3
      summary: Подтверждение бронирования
  /api/bookings:
    post:
      tags:
        - Bookings
      description: Создаёт новое бронирование для элемента инвентаря.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          description: Бронирование успешно создано
        '400': *ref_0
        '403': *ref_1
        '404': *ref_2
        '500': *ref_3
      summary: Создание нового бронирования
  /api/catalog:
    get:
      tags:
        - Catalog
      description: Возвращает список доступных категорий инвентаря.
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Category'
                type: array
          description: Список категорий
        '400': *ref_0
        '403': *ref_1
        '404': *ref_2
        '500': *ref_3
      summary: Получение списка категорий
  /api/discount/apply:
    post:
      tags:
        - Discounts
      description: Применяет скидку для бронирования.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
        required: true
      responses:
        '200':
          description: Скидка успешно применена
        '400': *ref_0
        '403': *ref_1
        '404': *ref_2
        '500': *ref_3
      summary: Применение скидки
  /api/inventory:
    get:
      tags:
        - Inventory
      description: Возвращает список доступного инвентаря с возможностью фильтрации.
      parameters:
        - description: Фильтр по доступности
          in: query
          name: availability
          required: false
          schema:
            type: boolean
        - description: Фильтр по категории
          in: query
          name: category
          required: false
          schema:
            type: string
        - description: Минимальная цена
          in: query
          name: minPrice
          required: false
          schema:
            type: number
        - description: Максимальная цена
          in: query
          name: maxPrice
          required: false
          schema:
            type: number
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/InventoryItem'
                type: array
          description: Список инвентаря
        '400': *ref_0
        '403': *ref_1
        '404': *ref_2
        '500': *ref_3
      summary: Получение списка инвентаря
    post:
      tags:
        - Inventory
      description: Создаёт новый элемент инвентаря.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewInventoryItem'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewInventoryItem'
          description: Инвентарь успешно создан
        '400': *ref_0
        '403': *ref_1
        '404': *ref_2
        '500': *ref_3
      summary: Добавление нового инвентаря
  /api/inventory/{id}:
    delete:
      tags:
        - Inventory
      description: Удаляет элемент инвентаря по ID.
      parameters:
        - description: ID инвентаря
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Инвентарь успешно удалён
        '400': *ref_0
        '403': *ref_1
        '404': *ref_2
        '500': *ref_3
      summary: Удаление инвентаря
    get:
      tags:
        - Inventory
      description: Возвращает данные по указанному элементу инвентаря.
      parameters:
        - description: ID инвентаря
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
          description: Информация об инвентаре
        '400': *ref_0
        '403': *ref_1
        '404': *ref_2
        '500': *ref_3
      summary: Получение информации о конкретном инвентаре
    put:
      tags:
        - Inventory
      description: Обновляет данные указанного элемента инвентаря.
      parameters:
        - description: ID инвентаря
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItem'
        required: true
      responses:
        '200':
          description: Информация об инвентаре успешно обновлена
        '400': *ref_0
        '403': *ref_1
        '404': *ref_2
        '500': *ref_3
      summary: Обновление информации об инвентаре
  /api/inventory/{id}/images:
    post:
      tags:
        - Inventory
      description: Добавляет изображение к элементу инвентаря.
      parameters:
        - description: ID инвентаря
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                image:
                  description: Изображение для загрузки
                  format: binary
                  type: string
              type: object
        required: true
      responses:
        '201':
          description: Изображение успешно загружено
        '400': *ref_0
        '403': *ref_1
        '404': *ref_2
        '500': *ref_3
      summary: Загрузка изображения для инвентаря
  /api/inventory/{id}/images/{imageId}:
    delete:
      tags:
        - Inventory
      description: Удаляет указанное изображение из элемента инвентаря.
      parameters:
        - description: ID инвентаря
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: ID изображения
          in: path
          name: imageId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Изображение успешно удалено
        '400': *ref_0
        '403': *ref_1
        '404': *ref_2
        '500': *ref_3
      summary: Удаление изображения из инвентаря
components:
  schemas:
    ErrorStructure:
      description: Структура с описанием ошибки
      type: object
      properties:
        errorCode:
          type: string
          example: AA-3B
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          description: Электронная почта пользователя.
        password:
          type: string
          format: password
          description: Пароль пользователя.
    registrationRequest:
      type: object
      required:
        - username
        - email
        - password
      properties:
        username:
          type: string
          format: username
          description: Имя пользователя.
        email:
          type: string
          format: email
          description: Электронная почта пользователя.
        password:
          type: string
          format: password
          description: Пароль пользователя.
    LoginResponse:
      type: object
      properties:
        accessToken:
          type: string
          description: Токен доступа для аутентификации.
        user:
          type: object
          properties:
            id:
              type: string
              description: Уникальный идентификатор пользователя.
            username:
              type: string
              description: Имя пользователя.
            email:
              type: string
              format: email
              description: Электронная почта пользователя.
    ForgotPasswordRequest:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          format: email
          description: Электронная почта пользователя для восстановления пароля.
    ResetPasswordRequest:
      type: object
      required:
        - token
        - newPassword
        - confirmPassword
      properties:
        token:
          type: string
          description: Токен для восстановления пароля, полученный по электронной почте.
        newPassword:
          type: string
          format: password
          description: Новый пароль пользователя.
        confirmPassword:
          type: string
          format: password
          description: Подтверждение нового пароля.
    UserProfile:
      type: object
      properties:
        id:
          type: string
          description: Уникальный идентификатор пользователя.
        username:
          type: string
          description: Имя пользователя.
        email:
          type: string
          format: email
          description: Электронная почта пользователя.
        createdAt:
          type: string
          format: date-time
          description: Дата создания профиля.
    UserNotification:
      type: object
      properties:
        id:
          type: string
          description: Уникальный идентификатор уведомления.
        message:
          type: string
          description: Текст уведомления.
        read:
          type: boolean
          description: Прочитано ли уведомление.
        createdAt:
          type: string
          format: date-time
          description: Дата создания уведомления.
    Booking:
      properties:
        endDate:
          description: Дата окончания бронирования
          format: date
          type: string
        id:
          description: Уникальный идентификатор бронирования
          type: integer
        inventoryId:
          description: ID элемента инвентаря
          type: integer
        startDate:
          description: Дата начала бронирования
          format: date
          type: string
        status:
          description: Статус бронирования
          enum:
            - pending
            - confirmed
            - cancelled
          type: string
        totalPrice:
          description: Общая стоимость бронирования
          type: number
        userId:
          description: ID пользователя
          type: integer
      type: object
    BookingRequest:
      properties:
        endDate:
          description: Дата окончания бронирования
          format: date
          type: string
        inventoryId:
          description: ID элемента инвентаря для бронирования
          type: integer
        startDate:
          description: Дата начала бронирования
          format: date
          type: string
      type: object
    Category:
      properties:
        id:
          description: Уникальный идентификатор категории
          type: integer
        name:
          description: Название категории
          type: string
      type: object
    DiscountRequest:
      properties:
        bookingId:
          description: ID бронирования
          type: integer
        discountCode:
          description: Промокод для скидки
          type: string
      type: object
    InventoryItem:
      properties:
        availability:
          description: Статус доступности
          type: boolean
        category:
          description: Категория инвентаря
          type: string
        description:
          description: Описание инвентаря
          type: string
        id:
          description: Уникальный идентификатор элемента инвентаря
          type: integer
        images:
          items:
            description: URL изображений
            type: string
          type: array
        name:
          description: Название инвентаря
          type: string
        pricePerDay:
          description: Цена за день аренды
          type: number
        reviews:
          description: Последние два отзыва
          items:
            properties:
              comment:
                description: Текст отзыва
                type: string
              rating:
                description: Оценка от 1 до 5
                maximum: 5
                minimum: 1
                type: integer
              reviewerName:
                description: Имя пользователя, оставившего отзыв
                type: string
            type: object
          type: array
      type: object
    NewInventoryItem:
      properties:
        availability:
          description: Статус доступности
          type: boolean
        category:
          description: Категория инвентаря
          type: string
        description:
          description: Описание инвентаря
          type: string
        id:
          description: Уникальный идентификатор элемента инвентаря
          type: integer
        images:
          items:
            description: URL изображений
            type: string
          type: array
        name:
          description: Название инвентаря
          type: string
        pricePerDay:
          description: Цена за день аренды
          type: number
      type: object
  securitySchemes:
    BearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
